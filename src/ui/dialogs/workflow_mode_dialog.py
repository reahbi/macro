"""
Workflow mode selection dialog for choosing between Excel workflow and normal macro mode
"""

from PyQt5.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QLabel, QPushButton,
    QWidget, QFrame, QGroupBox
)
from PyQt5.QtCore import Qt, pyqtSignal, QSize
from PyQt5.QtGui import QFont, QIcon, QPalette, QColor

class WorkflowModeDialog(QDialog):
    """Dialog for selecting workflow mode at startup"""
    
    # Signals
    excel_mode_selected = pyqtSignal()
    normal_mode_selected = pyqtSignal()
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("ÏûëÏóÖ Î™®Îìú ÏÑ†ÌÉù")
        self.setModal(True)
        self.setMinimumSize(600, 400)
        self.init_ui()
        
    def init_ui(self):
        """Initialize UI components"""
        # Main layout
        layout = QVBoxLayout(self)
        layout.setSpacing(20)
        layout.setContentsMargins(30, 30, 30, 30)
        
        # Title
        title = QLabel("ÏûëÏóÖ Î™®ÎìúÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî")
        title_font = QFont()
        title_font.setPointSize(18)
        title_font.setBold(True)
        title.setFont(title_font)
        title.setAlignment(Qt.AlignCenter)
        layout.addWidget(title)
        
        # Description
        desc = QLabel("Excel ÌååÏùºÏùò Îç∞Ïù¥ÌÑ∞Î•º Í∏∞Î∞òÏúºÎ°ú Î∞òÎ≥µ ÏûëÏóÖÏùÑ ÌïòÏãúÍ≤†ÏäµÎãàÍπå?\nÏïÑÎãàÎ©¥ ÏùºÎ∞òÏ†ÅÏù∏ Îß§ÌÅ¨Î°úÎ•º ÎßåÎìúÏãúÍ≤†ÏäµÎãàÍπå?")
        desc.setAlignment(Qt.AlignCenter)
        desc.setWordWrap(True)
        layout.addWidget(desc)
        
        # Mode selection container
        mode_container = QHBoxLayout()
        mode_container.setSpacing(20)
        
        # Excel mode card
        excel_card = self.create_mode_card(
            "Excel Î∞òÎ≥µ ÏûëÏóÖ",
            "üìä",
            "Excel Îç∞Ïù¥ÌÑ∞Î°ú\nÎ∞òÎ≥µ Ïã§Ìñâ",
            "‚Ä¢ Excel ÌååÏùºÏùò Í∞Å ÌñâÎßàÎã§ ÏûêÎèô Ïã§Ìñâ\n"
            "‚Ä¢ ÎåÄÎüâ Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨Ïóê ÏµúÏ†Å\n"
            "‚Ä¢ Î≥ëÏõê, ÏÇ¨Î¨¥Ïã§ ÏóÖÎ¨¥ ÏûêÎèôÌôî",
            self.on_excel_mode_clicked
        )
        mode_container.addWidget(excel_card)
        
        # Normal mode card
        normal_card = self.create_mode_card(
            "ÏùºÎ∞ò Îß§ÌÅ¨Î°ú",
            "üñ±Ô∏è",
            "Îã®Ïàú ÌÅ¥Î¶≠/ÏûÖÎ†•\nÏûëÏóÖ",
            "‚Ä¢ ÎßàÏö∞Ïä§ÏôÄ ÌÇ§Î≥¥Îìú ÎèôÏûë ÎÖπÌôî\n"
            "‚Ä¢ Îã®Ïùº ÏûëÏóÖ ÏûêÎèôÌôî\n"
            "‚Ä¢ Î∞òÎ≥µÏ†ÅÏù∏ ÌÅ¥Î¶≠ ÏûëÏóÖ",
            self.on_normal_mode_clicked
        )
        mode_container.addWidget(normal_card)
        
        layout.addLayout(mode_container)
        
        # Spacer
        layout.addStretch()
        
    def create_mode_card(self, title: str, icon: str, subtitle: str, 
                        description: str, click_handler) -> QWidget:
        """Create a mode selection card"""
        # Card container
        card = QFrame()
        card.setFrameStyle(QFrame.Box)
        card.setStyleSheet("""
            QFrame {
                border: 2px solid #ddd;
                border-radius: 10px;
                background-color: #f9f9f9;
            }
            QFrame:hover {
                border: 2px solid #4CAF50;
                background-color: #f0f8f0;
            }
        """)
        card.setCursor(Qt.PointingHandCursor)
        card.setMinimumSize(250, 300)
        
        # Card layout
        card_layout = QVBoxLayout(card)
        card_layout.setSpacing(15)
        card_layout.setContentsMargins(20, 20, 20, 20)
        
        # Icon
        icon_label = QLabel(icon)
        icon_font = QFont()
        icon_font.setPointSize(48)
        icon_label.setFont(icon_font)
        icon_label.setAlignment(Qt.AlignCenter)
        card_layout.addWidget(icon_label)
        
        # Title
        title_label = QLabel(title)
        title_font = QFont()
        title_font.setPointSize(16)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setAlignment(Qt.AlignCenter)
        card_layout.addWidget(title_label)
        
        # Subtitle
        subtitle_label = QLabel(subtitle)
        subtitle_font = QFont()
        subtitle_font.setPointSize(12)
        subtitle_label.setFont(subtitle_font)
        subtitle_label.setAlignment(Qt.AlignCenter)
        subtitle_label.setWordWrap(True)
        card_layout.addWidget(subtitle_label)
        
        # Description
        desc_label = QLabel(description)
        desc_label.setWordWrap(True)
        desc_label.setAlignment(Qt.AlignLeft)
        desc_label.setStyleSheet("color: #666;")
        card_layout.addWidget(desc_label)
        
        # Spacer
        card_layout.addStretch()
        
        # Button
        button = QPushButton("ÏÑ†ÌÉù")
        button.setMinimumHeight(40)
        button.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 5px;
                font-size: 14px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
            QPushButton:pressed {
                background-color: #3d8b40;
            }
        """)
        button.clicked.connect(click_handler)
        card_layout.addWidget(button)
        
        # Make entire card clickable
        card.mousePressEvent = lambda event: click_handler()
        
        return card
        
    def on_excel_mode_clicked(self):
        """Handle Excel mode selection"""
        self.excel_mode_selected.emit()
        self.accept()
        
    def on_normal_mode_clicked(self):
        """Handle normal mode selection"""
        self.normal_mode_selected.emit()
        self.accept()